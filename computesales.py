# -*- coding: utf-8 -*-
"""computeSales

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1umd-zOVqUBGIx0trkh3YQ9_pIZ4glPpy
"""

import json
import time
import sys


def read_json(file_path):
    """
    Read JSON data from a file.

    Args:
        file_path (str): The path to the JSON file.

    Returns:
        dict: The JSON data.
    """
    try:
        with open(file_path, 'r') as file:
            data = json.load(file)
        return data
    except FileNotFoundError as e:
        print(f"Error: File not found - {e}", file=sys.stderr)
        return None
    except Exception as e:
        print(f"Error reading file: {e}", file=sys.stderr)
        return None


def compute_total_cost(price_catalogue, sales_record):
    """
    Compute the total cost for all sales based on the price catalogue.

    Args:
        price_catalogue (dict): The catalogue of prices.
        sales_record (dict): The record of sales.

    Returns:
        float: The total cost of all sales.
    """
    total_cost = 0
    for sale in sales_record:
        product = sale["Product"]
        quantity = sale["Quantity"]
        if product in price_catalogue:
            total_cost += price_catalogue[product] * quantity
        else:
            print(f"Error: Product '{product}' not found in the price catalogue.", file=sys.stderr)
    return total_cost


def write_results_to_file(total_cost, elapsed_time):
    """
    Write the total cost and elapsed time to a file.

    Args:
        total_cost (float): The total cost of all sales.
        elapsed_time (float): The elapsed time for computation.
    """
    with open('SalesResults.txt', 'w') as file:
        file.write(f"Total Cost: ${total_cost:.2f}\n")
        file.write(f"Elapsed Time: {elapsed_time:.6f} seconds\n")


def main(price_catalogue_file, sales_record_file):
    """
    Main function to compute sales.

    Args:
        price_catalogue_file (str): The path to the price catalogue JSON file.
        sales_record_file (str): The path to the sales record JSON file.
    """
    # Read JSON data
    price_catalogue = read_json(price_catalogue_file)
    sales_record = read_json(sales_record_file)

    if price_catalogue is None or sales_record is None:
        return

    # Create a dictionary to store prices
    prices = {product["title"]: product["price"] for product in price_catalogue}

    # Compute total cost
    start_time = time.time()
    total_cost = compute_total_cost(prices, sales_record)
    elapsed_time = time.time() - start_time

    # Print total cost
    print(f"Total Cost: ${total_cost:.2f}")
    print(f"Elapsed Time: {elapsed_time:.6f}")

    # Write results to file
    write_results_to_file(total_cost, elapsed_time)


if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python computeSales.py priceCatalogue.json salesRecord.json", file=sys.stderr)
        sys.exit(1)

    price_catalogue_file = '/content/priceCatalogue_TC1.json'
    sales_record_file = '/content/salesRecord_TC1.json'

    # Run the main function
    main(price_catalogue_file, sales_record_file)